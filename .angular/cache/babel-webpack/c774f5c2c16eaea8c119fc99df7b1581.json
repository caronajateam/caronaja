{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../auth/services/auth.service\";\nexport let GoogleGetaddressService = /*#__PURE__*/(() => {\n  class GoogleGetaddressService {\n    constructor(authSvc, zone) {\n      this.authSvc = authSvc;\n      this.zone = zone;\n      this.lat = 0;\n      this.lng = 0;\n      this.homeAdressLatLng = null;\n    }\n\n    getEstablishmentAddress(place) {\n      this.establishmentAddress = place['formatted_address'];\n      this.phone = this.getPhone(place);\n      this.formattedEstablishmentAddress = place['formatted_address'];\n      this.zone.run(() => {\n        this.formattedEstablishmentAddress = place['formatted_address'];\n        this.phone = place['formatted_phone_number'];\n      });\n      return new Promise(resolve => {\n        this.authSvc.getLatLng(this.formattedEstablishmentAddress).subscribe(resp => {\n          console.log(resp.results[0].geometry.location.lat);\n          console.log(resp.results[0].geometry.location.lng);\n          this.lat = resp.results[0].geometry.location.lat;\n          this.lng = resp.results[0].geometry.location.lng;\n\n          if (place.business_status == null) {\n            this.formattedEstablishmentAddress = place.address_components[1].short_name + ', ' + place.address_components[0].long_name + ' - ' + place.address_components[2].long_name;\n          } else {\n            this.formattedEstablishmentAddress = place.name;\n          }\n\n          this.homeAdressLatLng = {\n            address: this.formattedEstablishmentAddress,\n            latitude: this.lat,\n            longitude: this.lng\n          };\n          return resolve(this.homeAdressLatLng);\n        });\n      });\n    }\n\n    getAddress(place) {\n      this.address = place['formatted_address'];\n      this.phone = this.getPhone(place);\n      this.formattedAddress = place['formatted_address'];\n      this.zone.run(() => this.formattedAddress = place['formatted_address']);\n      return new Promise(resolve => {\n        this.authSvc.getLatLng(this.formattedAddress).subscribe(resp => {\n          console.log(resp.results[0].geometry.location.lat);\n          console.log(resp.results[0].geometry.location.lng);\n          this.lat = resp.results[0].geometry.location.lat;\n          this.lng = resp.results[0].geometry.location.lng;\n\n          if (place.business_status == null) {\n            this.formattedAddress = place.address_components[1].short_name + ', ' + place.address_components[0].long_name + ' - ' + place.address_components[2].long_name;\n          } else {\n            this.formattedAddress = place.name;\n          }\n\n          this.homeAdressLatLng = {\n            address: this.formattedAddress,\n            latitude: this.lat,\n            longitude: this.lng\n          };\n          return resolve(this.homeAdressLatLng);\n        });\n      });\n    }\n\n    getAddrComponent(place, componentTemplate) {\n      let result;\n\n      for (let i = 0; i < place.address_components.length; i++) {\n        const addressType = place.address_components[i].types[0];\n\n        if (componentTemplate[addressType]) {\n          result = place.address_components[i][componentTemplate[addressType]];\n          return result;\n        }\n      }\n\n      return;\n    }\n\n    getPhone(place) {\n      const COMPONENT_TEMPLATE = {\n        formatted_phone_number: 'formatted_phone_number'\n      },\n            phone = this.getAddrComponent(place, COMPONENT_TEMPLATE);\n      return phone;\n    }\n\n  }\n\n  GoogleGetaddressService.ɵfac = function GoogleGetaddressService_Factory(t) {\n    return new (t || GoogleGetaddressService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i0.NgZone));\n  };\n\n  GoogleGetaddressService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GoogleGetaddressService,\n    factory: GoogleGetaddressService.ɵfac,\n    providedIn: 'root'\n  });\n  return GoogleGetaddressService;\n})();","map":null,"metadata":{},"sourceType":"module"}