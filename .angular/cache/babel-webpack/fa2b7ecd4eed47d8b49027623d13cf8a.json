{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"addresstext\"];\nexport let GooglePlacesComponent = /*#__PURE__*/(() => {\n  class GooglePlacesComponent {\n    constructor() {\n      this.setAddress = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.getPlaceAutocomplete();\n    }\n\n    getPlaceAutocomplete() {\n      const autocomplete = new google.maps.places.Autocomplete(this.addresstext.nativeElement, {\n        componentRestrictions: {\n          country: 'BR'\n        },\n        types: [this.adressType]\n      });\n      google.maps.event.addListener(autocomplete, 'place_changed', () => {\n        const place = autocomplete.getPlace();\n        this.invokeEvent(place);\n      });\n    }\n\n    invokeEvent(place) {\n      this.setAddress.emit(place);\n    }\n\n  }\n\n  GooglePlacesComponent.ɵfac = function GooglePlacesComponent_Factory(t) {\n    return new (t || GooglePlacesComponent)();\n  };\n\n  GooglePlacesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GooglePlacesComponent,\n    selectors: [[\"GooglePlacesComponent\"]],\n    viewQuery: function GooglePlacesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addresstext = _t.first);\n      }\n    },\n    inputs: {\n      adressType: \"adressType\"\n    },\n    outputs: {\n      setAddress: \"setAddress\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"type\", \"text\", 1, \"input\", 2, \"padding\", \"12px 20px\", \"border\", \"1px solid #ccc\", \"width\", \"400px\", 3, \"ngModel\", \"ngModelChange\"], [\"addresstext\", \"\"]],\n    template: function GooglePlacesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function GooglePlacesComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.autocompleteInput = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.autocompleteInput);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return GooglePlacesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}